@using Microsoft.AspNetCore.Identity
@using YardControlSystem.Areas.Identity.Data
@using YardControlSystem.Models.Enums

@inject SignInManager<User> SignInManager
@inject UserManager<User> UserManager




<ul class="navbar-nav">
    @if (SignInManager.IsSignedIn(User))
    {
        User user = await UserManager.FindByNameAsync(User.Identity.Name);
        string roleName = "";
        switch (user.Role)
        {
            case Role.Driver:
                roleName = "Vairuotojas";
                break;
            case Role.Manager:
                roleName = "Vadybininkas";
                break;
            case Role.Storekeeper:
                roleName = "Sandėlininkas";
                break;
        }

        <li class="nav-item">
            <span id="manage" class="nav-link text-dark" asp-area="Identity" title="Manage"><b>@roleName @user.Name</b></span>
        </li>
        <li class="nav-item">
            <form id="logoutForm" class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                <button id="logout" type="submit" class="nav-link btn btn-link text-dark">Atsijungti</button>
            </form>
        </li>
    }
    else
    {
        <li class="nav-item">
            <a class="nav-link text-dark" id="register" asp-area="Identity" asp-page="/Account/Register">Registruotis</a>
        </li>
        <li class="nav-item">
            <a class="nav-link text-dark" id="login" asp-area="Identity" asp-page="/Account/Login">Prisijungti</a>
        </li>
    }
</ul>
